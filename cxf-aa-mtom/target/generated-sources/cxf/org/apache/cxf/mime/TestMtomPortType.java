package org.apache.cxf.mime;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebParam.Mode;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 2.2.1-SNAPSHOT
 * Thu Apr 23 16:20:40 CST 2009
 * Generated source version: 2.2.1-SNAPSHOT
 * 
 */
 
@WebService(targetNamespace = "http://cxf.apache.org/mime", name = "TestMtomPortType")
@XmlSeeAlso({org.apache.cxf.mime.types.ObjectFactory.class})
public interface TestMtomPortType {

    @ResponseWrapper(localName = "testByteArrayResponse", targetNamespace = "http://cxf.apache.org/mime/types", className = "org.apache.cxf.mime.types.ByteArrayType")
    @RequestWrapper(localName = "testByteArray", targetNamespace = "http://cxf.apache.org/mime/types", className = "org.apache.cxf.mime.types.ByteArrayType")
    @WebMethod
    public void testByteArray(
        @WebParam(mode = WebParam.Mode.INOUT, name = "name", targetNamespace = "http://cxf.apache.org/mime/types")
        javax.xml.ws.Holder<java.lang.String> name,
        @WebParam(mode = WebParam.Mode.INOUT, name = "attachinfo", targetNamespace = "http://cxf.apache.org/mime/types")
        javax.xml.ws.Holder<byte[]> attachinfo
    );

    @ResponseWrapper(localName = "testDataHandlerResponse", targetNamespace = "http://cxf.apache.org/mime/types", className = "org.apache.cxf.mime.types.DataHandlerType")
    @RequestWrapper(localName = "testDataHandler", targetNamespace = "http://cxf.apache.org/mime/types", className = "org.apache.cxf.mime.types.DataHandlerType")
    @WebMethod
    public void testDataHandler(
        @WebParam(mode = WebParam.Mode.INOUT, name = "name", targetNamespace = "http://cxf.apache.org/mime/types")
        javax.xml.ws.Holder<java.lang.String> name,
        @WebParam(mode = WebParam.Mode.INOUT, name = "attachinfo", targetNamespace = "http://cxf.apache.org/mime/types")
        javax.xml.ws.Holder<javax.activation.DataHandler> attachinfo
    );
}
