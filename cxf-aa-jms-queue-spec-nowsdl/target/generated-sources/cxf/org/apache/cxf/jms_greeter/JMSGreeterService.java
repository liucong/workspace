
/*
 * 
 */

package org.apache.cxf.jms_greeter;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.2.2-SNAPSHOT
 * Fri May 22 15:34:07 CST 2009
 * Generated source version: 2.2.2-SNAPSHOT
 * 
 */


@WebServiceClient(name = "JMSGreeterService", 
                  wsdlLocation = "file:/D:/cxf/apache-cxf-2.2/samples/cxf-aa-jms-queue-spec/wsdl/jms_greeter.wsdl",
                  targetNamespace = "http://cxf.apache.org/jms_greeter") 
public class JMSGreeterService extends Service {

    public final static URL WSDL_LOCATION;
    public final static QName SERVICE = new QName("http://cxf.apache.org/jms_greeter", "JMSGreeterService");
    public final static QName GreeterPort = new QName("http://cxf.apache.org/jms_greeter", "GreeterPort");
    static {
        URL url = null;
        try {
            url = new URL("file:/D:/cxf/apache-cxf-2.2/samples/cxf-aa-jms-queue-spec/wsdl/jms_greeter.wsdl");
        } catch (MalformedURLException e) {
            System.err.println("Can not initialize the default wsdl from file:/D:/cxf/apache-cxf-2.2/samples/cxf-aa-jms-queue-spec/wsdl/jms_greeter.wsdl");
            // e.printStackTrace();
        }
        WSDL_LOCATION = url;
    }

    public JMSGreeterService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public JMSGreeterService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public JMSGreeterService() {
        super(WSDL_LOCATION, SERVICE);
    }

    /**
     * 
     * @return
     *     returns JMSGreeterPortType
     */
    @WebEndpoint(name = "GreeterPort")
    public JMSGreeterPortType getGreeterPort() {
        return super.getPort(GreeterPort, JMSGreeterPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns JMSGreeterPortType
     */
    @WebEndpoint(name = "GreeterPort")
    public JMSGreeterPortType getGreeterPort(WebServiceFeature... features) {
        return super.getPort(GreeterPort, JMSGreeterPortType.class, features);
    }

}
